<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan base-package="com.journaldev.spring" />
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
    <!-- bind your messages.properties -->
	<beans:bean class="org.springframework.context.support.ResourceBundleMessageSource"	id="messageSource">
		<beans:property name="basename" value="messages" />
	</beans:bean>

	<!-- View resolver for tiles -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>
				org.springframework.web.servlet.view.tiles3.TilesView
			</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>  
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- DataSource -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" 	value="jdbc:mysql://localhost:3306/base_spring" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.journaldev.spring.model.Person</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect </beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="personDAO" class="com.journaldev.spring.dao.PersonDAOImpl" />
	<beans:bean id="personService" class="com.journaldev.spring.service.PersonServiceImpl"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<!-- Controle transacional feito manualmente 
		Estão acontecendo erros neste ponto. Por hora, está definido como annotation driven, 
		pelo que eu entendi, quando está assim, deve incluir o @transaction no código. Se eu tentar fazer a
		anotação funcionar desta forma, não tem como. 
		Verificar como está o exemplo do cara do livro
	-->
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT"/> -->
<!-- 			<tx:method name="*" propagation="SUPPORTS"/> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
	
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut expression="execution(* com.journaldev.spring.service.PersonServiceImpl.*(..))" id="addOperation"/> -->
<!-- 		<aop:advisor pointcut-ref="addOperation"  advice-ref="txAdvice" /> -->
<!-- 	</aop:config> -->
</beans:beans>